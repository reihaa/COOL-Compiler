purpose : to tokenize each object of cool program and and identify some basic errors

solution : A DFA‌ has been defined defined theoretically in cool.flex, which has 3 states : INITIAL, string, comment
	the code mainly determines how the DFA should behave and what to return in different situation.

code explanation :
		first part : consist of some definition for some objects, the aim is to classify streams to not be involve with them later.
			e.g : [IN] = {IN,in,In,iN}
		second part: defenition of DFA‌ function, explains what tokens to return and what to do in each state and regex.

input:
class Main inherits IO {
    pal(s : String) : Bool {
	if s.length() = 0
	then true
	else if s.length() = 1
	then true
	else if s.substr(0, 1) = s.substr(s.length() - 1, 1)
	then pal(s.substr(1, s.length() -2))
	else false
	fi fi fi
    };

    i : Int;

    main() : SELF_TYPE {
	{
            i <- ~1;
	    out_string("enter a string\n");
	    if pal(in_string())
	    then out_string("that was a palindrome\n")
	    else out_string("that was not a 
palindrome\n)
	    fi;
	}
    };
};
 
output:
#name "palindrome.cl"
#1 CLASS
#1 TYPEID Main
#1 INHERITS
#1 TYPEID IO
#1 '{'
#2 OBJECTID pal
#2 '('
#2 OBJECTID s
#2 ':'
#2 TYPEID String
#2 ')'
#2 ':'
#2 TYPEID Bool
#2 '{'
#3 IF
#3 OBJECTID s
#3 '.'
#3 OBJECTID length
#3 '('
#3 ')'
#3 '='
#3 INT_CONST 0
#4 THEN
#4 BOOL_CONST true
#5 ELSE
#5 IF
#5 OBJECTID s
#5 '.'
#5 OBJECTID length
#5 '('
#5 ')'
#5 '='
#5 INT_CONST 1
#6 THEN
#6 BOOL_CONST true
#7 ELSE
#7 IF
#7 OBJECTID s
#7 '.'
#7 OBJECTID substr
#7 '('
#7 INT_CONST 0
#7 ','
#7 INT_CONST 1
#7 ')'
#7 '='
#7 OBJECTID s
#7 '.'
#7 OBJECTID substr
#7 '('
#7 OBJECTID s
#7 '.'
#7 OBJECTID length
#7 '('
#7 ')'
#7 '-'
#7 INT_CONST 1
#7 ','
#7 INT_CONST 1
#7 ')'
#8 THEN
#8 OBJECTID pal
#8 '('
#8 OBJECTID s
#8 '.'
#8 OBJECTID substr
#8 '('
#8 INT_CONST 1
#8 ','
#8 OBJECTID s
#8 '.'
#8 OBJECTID length
#8 '('
#8 ')'
#8 '-'
#8 INT_CONST 2
#8 ')'
#8 ')'
#9 ELSE
#9 BOOL_CONST false
#10 FI
#10 FI
#10 FI
#11 '}'
#11 ';'
#13 OBJECTID i
#13 ':'
#13 TYPEID Int
#13 ';'
#15 OBJECTID main
#15 '('
#15 ')'
#15 ':'
#15 TYPEID SELF_TYPE
#15 '{'
#16 '{'
#17 OBJECTID i
#17 ASSIGN
#17 '~'
#17 INT_CONST 1
#17 ';'
#18 OBJECTID out_string
#18 '('
#18 STR_CONST "enter a string\n"
#18 ')'
#18 ';'
#19 IF
#19 OBJECTID pal
#19 '('
#19 OBJECTID in_string
#19 '('
#19 ')'
#19 ')'
#20 THEN
#20 OBJECTID out_string
#20 '('
#20 STR_CONST "that was a palindrome\n"
#20 ')'
#21 ELSE
#21 OBJECTID out_string
#21 '('
#22 ERROR "Unterminated string constant"
#22 OBJECTID palindrome
#22 ERROR "\\"
#22 OBJECTID n
#22 ')'
#23 FI
#23 ';'
#24 '}'
#25 '}'
#25 ';'
#26 '}'
#26 ';'

